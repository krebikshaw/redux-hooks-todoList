{"version":3,"sources":["constants/style.js","component/TodoItems.js","component/TodoFooter.js","redux/selectors.js","redux/actionTypes.js","hooks/useTodo.js","redux/actions.js","todo.js","redux/reducers/filter.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["GlobalStyle","createGlobalStyle","TodoItem","styled","li","props","theme","font_size","text","colors","text_primary","TodoToggle","input","Icon","span","$isDone","TodoText","p","DeleteButton","TextInput","InputBar","handleEnterUpdate","useState","value","setValue","type","onChange","e","target","onKeyDown","keyCode","TodoItems","key","todo","handleDeleteTodo","handleToggleIsDone","handleUpdateTodo","content","setContent","id","for","isDone","onClick","TodoFooterBar","footer","TodoCount","div","TodoFooter","todos","handleChangeFilter","handleClearComplete","count","i","length","getActiveNumber","selectTodos","state","selectFilter","filter","ADD_TODO","TOGGLE_TODO","DELETE_TODO","CLEAR_COMPLETE","UPDATE_TODO","CHANGE_FILTER","useTodo","dispatch","useDispatch","useSelector","useEffect","window","localStorage","setItem","JSON","stringify","writeTodosToLocalStorage","handleInputChange","payload","toggleTodoState","handleCreateTodo","addTodo","deleteTodo","updateTodo","changeFilter","TodoWrapper","TodoTitle","title_primary","title","TodoBody","bg_colors","bg_primary","TodoInput","TodoList","ul","Todo","placeholder","map","initialState","todoId","todoData","parse","getItem","combineReducers","action","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.db440432.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n  \n  a {\n    text-decoration: none;\n  \n    &:hover {\n      text-decoration: none;\n    }\n  }\n  \n  a:hover {\n    cursor: pointer;\n  }\n\n  button {\n    border: none;\n    background-color: #fff;\n    cursor: pointer;\n  }\n\n  button:hover, button:focus {\n    outline: none;\n  }\n\n  body {\n    font:  14px 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    line-height: 1.4em;\n  }\n`\nexport default GlobalStyle;\nexport const MEDIA_QUERY_MD = '@media scream and (min-width: 768px)';\nexport const MEDIA_QUERY_LG = '@media scream and (min-width: 1000px)';\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './../constants/style';\n\nconst TodoItem = styled.li`\n  position: relative;\n  font-size: ${props => props.theme.font_size.text};\n  font-weight: lighter;\n  color: ${props => props.theme.colors.text_primary};\n  letter-spacing: 0.2em;\n  list-style-type: none;\n  text-align: left;\n  margin: 15px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(0,0,0,0.05);\n  & p {\n    margin: 0;\n    padding: 0.3rem 0;\n  }\n  &:hover {\n    text-shadow: 0 0 0.1px rgba(0,0,0,1);\n    input[type=\"button\"] {\n      display: unset;\n    }\n  }\n`;\n\nconst TodoToggle = styled.input`\n  display: none;\n  & + label {\n    max-width: 460px;\n    overflow: hidden;\n    word-break: break-all;\n    word-wrap: break-word; \n    padding: 0.1em;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    margin: 0;\n`;\n\nconst Icon = styled.span`\n  min-width: 20px;\n  min-height: 20px;\n  cursor: pointer;\n  filter: opacity(0.3);\n  ${\n    props => props.$isDone ? `\n      background: url(checked.svg) center/cover no-repeat;\n      margin: 7.5px 15px 7.5px 5px;\n    ` : `\n      background: url(unchecked.svg) center/cover no-repeat;\n      margin: 7.5px 15px 7.5px 5px;\n    `\n  }\n`;\n\nconst TodoText = styled.p`\n  ${\n    props => props.$isDone && `\n      text-decoration: line-through;\n    `\n  }\n`;\n\nconst DeleteButton = styled.input`\n  display: none;\n  position: absolute;\n  right: 30px;\n  top: 6px;\n  border: none;\n  outline: none;\n  background: url(delete.svg) center/cover no-repeat;\n  filter: opacity(0.3);\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;\n\nconst TextInput = styled.input`\n  width: 100%;\n  padding: 0.1em;\n  font-size: 18px;\n  font-weight: lighter;\n  letter-spacing: 0.2em;\n  line-height: 1.4em;\n  outline: none;\n`;\n\nconst InputBar = ( { text, handleEnterUpdate } ) => {\n  const [value, setValue] = useState(text);\n  const handleInputChange = e => {\n    setValue(e.target.value)\n  }\n\n  return (\n    <TextInput type=\"text\" \n      value={value} \n      onChange={ handleInputChange } \n      onKeyDown={ e => {\n        if (e.keyCode === 13 && value !== '') {\n          handleEnterUpdate(value)\n        }\n      }}\n    />\n  )\n}\n\nconst TodoItems = ( { key, todo, handleDeleteTodo, handleToggleIsDone, handleUpdateTodo } ) => {\n  const [content, setContent] = useState(todo.content);\n  const handleClickContent = () => {\n    setContent('');\n  }\n  const handleEnterUpdate = value => {\n    handleUpdateTodo(todo.id, value)\n    setContent(value);\n  }\n\n  return (\n    <TodoItem>\n      <TodoToggle  type='checkbox' id={todo.id} />\n      <label for={todo.id}>\n        <Icon  $isDone={todo.isDone} onClick={() => {\n          handleToggleIsDone(todo.id)\n        }}></Icon>\n      </label>\n      <TodoText \n        $isDone={todo.isDone}\n        onClick={handleClickContent}\n      >\n      {\n        content || <InputBar text={todo.content} handleEnterUpdate={handleEnterUpdate} />\n      }\n      </TodoText>\n      <DeleteButton type='button' onClick={() => {\n        handleDeleteTodo(todo.id)\n      }} />\n    </TodoItem>\n  )\n}\n\nexport default TodoItems;","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './../constants/style';\n\nconst TodoFooterBar = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: lighter;\n  color: #777;\n  padding: 10px;\n  & ul {\n    display: flex;\n    margin: 0;\n    & li {\n      a {\n        color: #777;\n        margin: 3px;\n        padding: 3px 7px;\n        border: 1px solid transparent;\n        border-radius: 3px;\n      }\n      .selected {\n        border: 0.5px solid rgba(175, 47, 47, 0.2);\n      }\n    } \n  }\n  & button {\n    margin-right: 5px;\n    color: #777;\n  }\n`;\n\nconst TodoCount = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: lighter;\n  color: $lightColor_02;\n  margin-left: 20px;\n\n  & strong {\n    margin: 5px;\n    font-weight: lighter;\n  }\n\n  & p {\n    margin: 0;\n  }\n`;\n\nconst TodoFooter = ({ todos, handleChangeFilter, handleClearComplete }) => {\n  const getActiveNumber = todos => {\n    let count = 0;\n    for (let i = 0; i < todos.length; i++) {\n      if (!todos[i].isDone) count++;\n    }\n    return count;\n  };\n\n  return (\n    <TodoFooterBar>\n      <TodoCount>\n        <strong>{ getActiveNumber(todos) }</strong>\n        <p>items left</p>\n      </TodoCount>\n      <ul>\n        <li onClick={() => { handleChangeFilter('all') }}>\n          <a>All</a>\n        </li>\n        <li onClick={() => { handleChangeFilter('active') }}>\n          <a>Active</a>\n        </li>\n        <li onClick={() => { handleChangeFilter('complete') }}>\n          <a>Completed</a>\n        </li>\n      </ul>\n      <button onClick={ handleClearComplete }>Clear completed</button>\n    </TodoFooterBar>\n  )\n}\n\nexport default TodoFooter;\n","export const selectTodos = state => state.todos.todos;\nexport const selectFilter = state => state.filter.filter;","export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const CLEAR_COMPLETE = \"CLEAR_COMPLETE\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter, selectTodos } from '../redux/selectors';\nimport { addTodo, toggleTodoState, deleteTodo, clearComplete, updateTodo, changeFilter } from '../redux/actions';\n\nconst writeTodosToLocalStorage = ( todos ) => {\n  window.localStorage.setItem('todos', JSON.stringify(todos));\n}\n\nexport default function useTodo() {\n  const dispatch = useDispatch();\n  const todos = useSelector(selectTodos);\n  const filter = useSelector(selectFilter);\n  const [value, setValue] = useState('');\n  const handleInputChange = e => setValue(e.target.value);\n  const handleChangeFilter = type => dispatch(changeFilter(type));\n\n  useEffect(() => writeTodosToLocalStorage(todos), [todos]);\n  \n  const handleCreateTodo = () => {\n    dispatch(addTodo(value));\n    setValue('');\n  }\n  const handleToggleIsDone = id => dispatch(toggleTodoState(id));\n  const handleDeleteTodo = id => dispatch(deleteTodo(id));\n  const handleClearComplete = () => dispatch(clearComplete());\n  const handleUpdateTodo = (id, value) => dispatch(updateTodo(id, value));\n\n  return {\n    value,\n    todos,\n    filter,\n    handleInputChange,\n    handleToggleIsDone,\n    handleCreateTodo,\n    handleDeleteTodo,\n    handleUpdateTodo,\n    handleClearComplete,\n    handleChangeFilter\n  }\n}","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, CLEAR_COMPLETE, UPDATE_TODO, CHANGE_FILTER } from './actionTypes';\n\nexport function addTodo(value) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content: value\n    }\n  };\n};\n\nexport function toggleTodoState(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id,\n    }\n  };\n};\n\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    }\n  };\n};\n\nexport function clearComplete() {\n  return {\n    type: CLEAR_COMPLETE\n  };\n};\n\nexport function updateTodo(id, value) {\n  return {\n    type: UPDATE_TODO,\n    payload: {\n      id,\n      value\n    }\n  };\n};\n\nexport function changeFilter(type) {\n  return {\n    type: CHANGE_FILTER,\n    payload: {\n      type\n    }\n  };\n};","import React from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './constants/style';\nimport TodoItems from './component/TodoItems';\nimport TodoFooter from './component/TodoFooter';\nimport useTodo from './hooks/useTodo';\n\nconst TodoWrapper = styled.div``;\n\nconst TodoTitle = styled.div`\n  color: ${props => props.theme.colors.title_primary};\n  font-size: ${props => props.theme.font_size.title};\n  text-align: center;\n  margin: 50px;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nconst TodoBody = styled.div`\n  background: ${props => props.theme.bg_colors.bg_primary};\n  width: 550px;\n  margin: 30px auto;\n  box-shadow: 0 2px 4px 0 rgba(0,0,0,0.2), 0 25px 50px 0 rgba(0,0,0,0.1);\n`;\n\nconst TodoInput = styled.input`\n  padding: 16px 16px 16px 60px;\n  border: none;\n  box-shadow: inset 0 -2px 1px rgba(0,0,0,0.03);\n  outline: none;\n  width: 100%;\n  font-size: ${props => props.theme.font_size.input};\n  font-weight: lighter;\n  letter-spacing: 0.3rem;\n  line-height: 1rem;\n  &::placeholder {\n    color: #a0969638;\n    font-weight: lighter;\n  }\n`;\n\nconst TodoList = styled.ul``;\n\nconst Todo = () => {\n  const {\n    value,\n    todos,\n    filter,\n    handleInputChange,\n    handleToggleIsDone,\n    handleCreateTodo,\n    handleDeleteTodo,\n    handleUpdateTodo,\n    handleClearComplete,\n    handleChangeFilter\n  } = useTodo();\n\n  return (\n    <TodoWrapper>\n      <GlobalStyle />\n      <TodoTitle>\n        todos\n      </TodoTitle>\n      <TodoBody>\n        <TodoInput \n          placeholder='What needs to be done?' \n          value={value} \n          onChange={handleInputChange} \n          onKeyDown={e => { \n            if (e.keyCode === 13 && value !== '') {\n            handleCreateTodo(e);\n          }}}\n        />\n        <TodoList>\n          { \n            todos.filter(todo => {\n              if (filter === 'all') return todo\n              return filter === 'complete' ? todo.isDone : !todo.isDone\n            }).map(todo => <TodoItems \n            key={todo.id} \n            todo={todo} \n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n            handleUpdateTodo={handleUpdateTodo} \n            />\n          )}\n        </TodoList>\n        <TodoFooter\n          todos={todos}\n          handleChangeFilter={handleChangeFilter}\n          handleClearComplete={handleClearComplete}\n        />\n      </TodoBody>\n    </TodoWrapper>\n  )\n}\n\nexport default Todo;","import { CHANGE_FILTER } from '../actionTypes';\n\nlet initialState = { filter: 'all' };\n\nexport default function filterReducer(state = initialState, action) {\n  switch(action.type) {\n    case CHANGE_FILTER:\n      return {\n        ...state,\n        filter: action.payload.type\n      }\n    default:\n      return state\n  }\n}","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, CLEAR_COMPLETE, UPDATE_TODO } from '../actionTypes';\n\nlet todoId = 1;\nlet todoData = JSON.parse(window.localStorage.getItem('todos')) || '';\nlet initialState = {\n  todos: [\n    {\n      id: 0,\n      content: 'new todo',\n      isDone: false\n    }\n  ]\n}\n\nif (todoData && todoData.length !== 0) {\n  initialState = { todos: todoData }\n  todoId = todoData[todoData.length - 1].id + 1\n}\n\nexport default function todoReducer(state = initialState, action) {\n  switch(action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            content: action.payload.content,\n            isDone: false\n          }\n        ],\n      }\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map(todo => {\n          if (todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            isDone: !todo.isDone\n          }\n        })\n      }\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload.id)\n      }\n    case CLEAR_COMPLETE:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => !todo.isDone)\n      }\n    case UPDATE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map(todo => {\n          if (todo.id !== action.payload.id) return todo\n          return {\n            ...todo,\n            content: action.payload.value\n          }\n        })\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport filter from \"./filter\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todos, filter });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Todo from './todo';\r\nimport store from './redux/store';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst theme = {\r\n  colors: {\r\n    title_primary: 'rgba(175, 47, 47, 0.15)',\r\n    text_primary: '#4d4d4d'\r\n  },\r\n  bg_colors: {\r\n    bg_primary: '#fff'\r\n  },\r\n  font_size: {\r\n    title: '6rem',\r\n    text: '1.4rem',\r\n    input: '1.5rem'\r\n  },\r\n};\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={ theme }>\r\n    <Provider store={store}>\r\n      <Todo />\r\n    </Provider>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}